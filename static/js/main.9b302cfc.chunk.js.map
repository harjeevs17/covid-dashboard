{"version":3,"sources":["componets/Cards/Cards.module.css","componets/Cards/Cards.jsx","api/index.js","componets/Chart/Chart.jsx","componets/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","componets/Chart/Chart.module.css","componets/CountryPicker/CountryPicker.module.css","images/logo.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","countryData","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedcountries","setfetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","logo","alt","Chart","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b302cfc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1mnHD\",\"card\":\"Cards_card__176JL\",\"infected\":\"Cards_infected__FvNy6\",\"recovered\":\"Cards_recovered__17YdF\",\"deaths\":\"Cards_deaths__3ou6D\"};","import React from 'react';\r\nimport {Card,CardContent,Grid,Typography} from '@material-ui/core'\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) =>\r\n{\r\n   if(!confirmed){\r\n       return 'Loading...'; \r\n   }\r\n   return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)} >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\" >\r\n                            <CountUp \r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                seperator=\",\"\r\n                            />\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Active cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)} >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\" >\r\n                        <CountUp \r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                seperator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Recovered cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)} >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\" >\r\n                        <CountUp \r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                seperator=\",\"\r\n                            />\r\n                        </Typography>\r\n                       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cards;","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) =>\r\n{\r\n    let changeableUrl = url;\r\n    if(country)\r\n    {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const {data : {confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n        /*const modified ={\r\n            confirmed,\r\n            recovered,\r\n            deaths\r\n        }*/\r\n        return {confirmed,recovered,deaths,lastUpdate};\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () =>\r\n{\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed : dailyData.confirmed.total,\r\n            deaths : dailyData.deaths.total,\r\n            date:dailyData.reportDate\r\n        }))\r\n        return modifiedData;\r\n        //console.log(data);\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () =>\r\n{\r\n    try {\r\n        const {data : {countries} } = await axios.get(`${url}/countries`);\r\n        const countryData = countries.map((country)=>country.name)\r\n       // console.log(countryData);\r\n        return countryData;\r\n    } catch (error) {\r\n         console.log(error);\r\n    }\r\n}","import React , {useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api'\r\nimport {Bar,Line} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Charts = ({data : {confirmed,recovered,deaths},country}) =>\r\n{\r\n    const [dailyData,setDailyData] = useState([]);\r\n    useEffect(()=>{\r\n       const fetchAPI = async () =>\r\n       {\r\n        setDailyData(await fetchDailyData())\r\n       }\r\n       fetchAPI();\r\n       \r\n    },[]);\r\n    //console.log(setDailyData);\r\n    const lineChart = (\r\n    \r\n    dailyData.length ? (\r\n    <Line\r\n        data={{\r\n            labels:dailyData.map(({date})=>date),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true,\r\n            },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill:true,\r\n            }]\r\n        }}\r\n    />):null);\r\n\r\n    const barChart = (\r\n        confirmed ?\r\n        (\r\n            <Bar\r\n                data={{\r\n                    labels : ['Infected','Recovered','Deaths'],\r\n                    datasets:[{\r\n                        label:'People',\r\n                        backgroundColor : [\r\n                            'rgb(0,0,255,0.5)',\r\n                            'rgb(0,255,0,0.5)',\r\n                            'rgb(255,0,0,0.5)'\r\n                        ],\r\n                        data : [confirmed.value,recovered.value,deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend : {display:false},\r\n                    title : {display : true , text : `Country state in ${country}`}\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n    return (\r\n        <div className={styles.container}>\r\n           {country ? barChart : lineChart }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Charts;","import React , {useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCountries} from '../../api'\r\nconst CountryPicker = ({handleCountryChange}) =>\r\n{\r\n    const [fetchedcountries,setfetchedCountries]  = useState([]);\r\n    useEffect(() =>{\r\n        const fetchAPI = async () => {\r\n            setfetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setfetchedCountries])\r\n    console.log('sdf',fetchedcountries);\r\n    return (\r\n       <FormControl className={styles.formControl}>\r\n           <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n               <option value = \"\">Global</option>\r\n                    {fetchedcountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n           </NativeSelect>\r\n       </FormControl>\r\n    )\r\n}\r\n\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport {Cards,Chart,CountryPicker} from './componets'\r\nimport styles from './App.module.css'\r\nimport {fetchData} from './api'\r\nimport logo from './images/logo.png'\r\nclass App extends React.Component\r\n{\r\n    state = {\r\n        data : {},\r\n        country : '',\r\n    }\r\n    async componentDidMount()\r\n    {\r\n        const fetchedData = await fetchData();\r\n        this.setState({data:fetchedData});\r\n        //console.log(fetchedData);\r\n    }\r\n    handleCountryChange = async (country) =>\r\n    {\r\n       const fetchedData = await fetchData(country);\r\n       this.setState({data: fetchedData, country : country});\r\n       //console.log('country data',fetchedData);\r\n    }\r\n    render()\r\n    {\r\n        const {data,country} = this.state;\r\n        return(\r\n        <div className={styles.container}>\r\n            <img className={styles.image} src={logo} alt=\"bad\"/>\r\n            <Cards data={data}/>\r\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n            <Chart data={data} country={country}/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","import  React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__Irev7\",\"image\":\"App_image__1nxLP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3hVuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3B7K2\"};","module.exports = __webpack_public_path__ + \"static/media/logo.d7265326.png\";"],"sourceRoot":""}